{"version":3,"sources":["game_algo.tsx","utils/state.tsx","game_redux.tsx","components/Box.tsx","utils/converter.tsx","components/Boxes.tsx","components/Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Move","state","boxes","title","com_ani","InitRandomAlgo","result_boxes","coor_ran","i","new_ran","Math","floor","random","push","ActionType","MoveAlgo","Dir","changed","Up","j","next","combindedNext","last_num","length","q","n_l","b_l","Down","Left","Right","GenerRandomAlgo","point_zero","pz_length","chosenPoint","ResetComAniAlgo","forEach","row","box","store","createStore","INIT_STATE","action","type","InitRandom","MoveUp","MoveDown","MoveLeft","MoveRight","ResetComAni","Dispatcher","dispatch","initRandom","moveUp","moveDown","moveLeft","moveRight","resetComAni","this","Box","boxinfo","color","titleColor","toString","convertTitleToBoxInfo","useState","toggle","x","useSpring","from","config","duration","useEffect","div","className","style","Object","assign","backgroundColor","transform","interpolate","range","output","Boxes","map","y","key","Game","useSelector","useDispatch","dispatcher","downHandler","isArrow","window","addEventListener","removeEventListener","handlers","useSwipeable","onSwipedLeft","e","onSwipedUp","onSwipedDown","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","trackTouch","console","log","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.247aab1c.chunk.js","sourcesContent":["import { BoxInt } from \"./utils/state\";\n\nexport const InitRandomAlgo = (\n  boxes: Array<Array<BoxInt>>\n): Array<Array<BoxInt>> => {\n  const result_boxes = [...boxes];\n  let coor_ran = [];\n  for (let i = 0; i < 4; i++) {\n    let new_ran = Math.floor(Math.random() * 4);\n    coor_ran.push(new_ran);\n  }\n  if (coor_ran[0] === coor_ran[2] && coor_ran[1] === coor_ran[3]) {\n    coor_ran[0] = (coor_ran[0] + 1) % 4;\n  }\n  result_boxes[coor_ran[0]][coor_ran[1]] = {\n    ...result_boxes[coor_ran[0]][coor_ran[1]],\n    title: 2,\n    com_ani: true,\n  };\n  result_boxes[coor_ran[2]][coor_ran[3]] = {\n    ...result_boxes[coor_ran[2]][coor_ran[3]],\n    title: 2,\n    com_ani: true,\n  };\n  return result_boxes;\n};\n\nexport enum Move {\n  Left,\n  Right,\n  Up,\n  Down\n}\n\nexport const MoveAlgo = (\n  boxes: Array<Array<BoxInt>>,\n  Dir: Move\n): Array<Array<BoxInt>> => {\n  const result_boxes = [...boxes];\n  let changed = false;\n  //===== Move up ===\n  if (Dir === Move.Up) {\n    for (let j = 0; j < 4; j++) {\n      let next = [];\n      let combindedNext = []\n      let last_num = 0;\n      for (let i = 0; i < 4; i++) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = i; q < 4; q++) {\n              if (boxes[q][j].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let i = 0; i < n_l; i++) {\n        result_boxes[i][j].title = next[i];\n      }\n      for (let i = n_l; i < 4; i++) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let i = 0; i < b_l; i++){\n        result_boxes[combindedNext[i]][j].com_ani = true;\n      }\n    }\n  }\n  //===== Move down ===\n  if (Dir === Move.Down) {\n    for (let j = 0; j < 4; j++) {\n      let next = [];\n      let combindedNext = [];\n      let last_num = 0;\n      for (let i = 3; i >= 0; i--) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = i; q >= 0; q--) {\n              if (boxes[q][j].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let i = 0; i < n_l; i++) {\n        result_boxes[3 - i][j].title = next[i];\n      }\n      for (let i = 0; i < 4 - n_l; i++) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let i = 0; i < b_l; i++){\n        result_boxes[3 - combindedNext[i]][j].com_ani = true;\n      }\n    }\n  }\n  //===== Move Left ===\n  if (Dir === Move.Left) {\n    for (let i = 0; i < 4; i++) {\n      let next = [];\n      let combindedNext = [];\n      let last_num = 0;\n      for (let j = 0; j < 4; j++) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = j; q < 4; q++) {\n              if (boxes[i][q].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let j = 0; j < n_l; j++) {\n        result_boxes[i][j].title = next[j];\n      }\n      for (let j = n_l; j < 4; j++) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let j = 0; j < b_l; j++){\n        result_boxes[i][combindedNext[j]].com_ani = true;\n      }\n    }\n  }\n  //===== Move Right ===\n  if (Dir === Move.Right) {\n    for (let i = 0; i < 4; i++) {\n      let next = [];\n      let combindedNext = [];\n      let last_num = 0;\n      for (let j = 3; j >= 0; j--) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = j; q >= 0; q--) {\n              if (boxes[i][q].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let j = 0; j < n_l; j++) {\n        result_boxes[i][3 - j].title = next[j];\n      }\n      for (let j = 3 - n_l; j >= 0; j--) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let j = 0; j < b_l; j++){\n        result_boxes[i][3 - combindedNext[j]].com_ani = true;\n      }\n    }\n  }\n\n  if (changed) {\n    return GenerRandomAlgo(result_boxes);\n  } else {\n    return result_boxes;\n  }\n};\n\nexport const GenerRandomAlgo = (\n  boxes: Array<Array<BoxInt>>\n): Array<Array<BoxInt>> => {\n  let point_zero = [];\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (boxes[i][j].title === 0) {\n        point_zero.push({\n          i,\n          j\n        });\n      }\n    }\n  }\n  let pz_length = point_zero.length;\n  if (pz_length > 0) {\n    let chosenIndexPZ = Math.floor(Math.random() * pz_length);\n    let chosenPoint = point_zero[chosenIndexPZ];\n    boxes[chosenPoint.i][chosenPoint.j].title = 2;\n    boxes[chosenPoint.i][chosenPoint.j].com_ani = true;\n  }\n  return boxes;\n};\n\n\nexport const ResetComAniAlgo = (\n  boxes: Array<Array<BoxInt>>\n): Array<Array<BoxInt>> => {\n  const result_boxes = [...boxes];\n  boxes.forEach(row => {\n    row.forEach(box => {\n      box.com_ani = false\n    })\n  })\n  return result_boxes;\n};","export interface BoxInt {\n  title: number;\n  com_ani: boolean;\n}\n\nexport interface StateInt {\n  boxes: Array<Array<BoxInt>>;\n}\n\nexport const box: BoxInt = {\n  title: 0,\n  com_ani: false //combined animation\n};\n\nexport const box2: BoxInt = {\n  title: 2,\n  com_ani: false //combined animation\n};\n\nexport const state: StateInt = {\n  boxes: [\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ],\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ],\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ],\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ]\n  ]\n};\n","import { createStore, Action, Reducer, Dispatch } from \"redux\";\nimport { state as INIT_STATE, StateInt, box, BoxInt } from \"./utils/state\";\nimport { InitRandomAlgo, MoveAlgo, Move, ResetComAniAlgo } from \"./game_algo\";\n\nexport enum ActionType {\n  MoveUp,\n  MoveDown,\n  MoveLeft,\n  MoveRight,\n  InitRandom,\n  ResetComAni\n}\n\nexport interface DispatchActionInt extends Action<ActionType> {\n  payload?: Partial<StateInt>;\n}\n\nconst reducer: Reducer<StateInt, DispatchActionInt> = (\n  state = INIT_STATE,\n  action\n) => {\n  switch (action.type) {\n    case ActionType.InitRandom:\n      return { ...state, boxes: InitRandomAlgo(state.boxes) };\n    case ActionType.MoveUp:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Up) };\n    case ActionType.MoveDown:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Down) };\n    case ActionType.MoveLeft:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Left) };\n    case ActionType.MoveRight:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Right) };\n    case ActionType.ResetComAni:\n      return { ...state, boxes: ResetComAniAlgo(state.boxes) };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n\nexport class Dispatcher {\n  private readonly dispatch: Dispatch<DispatchActionInt>;\n  constructor(dispatch: Dispatch<DispatchActionInt>) {\n    this.dispatch = dispatch;\n  }\n  initRandom = () => this.dispatch({ type: ActionType.InitRandom });\n  moveUp = () => this.dispatch({ type: ActionType.MoveUp });\n  moveDown = () => this.dispatch({ type: ActionType.MoveDown });\n  moveLeft = () => this.dispatch({ type: ActionType.MoveLeft });\n  moveRight = () => this.dispatch({ type: ActionType.MoveRight });\n  resetComAni = () => this.dispatch({type: ActionType.ResetComAni});\n}\n","import React, {useEffect, useState} from \"react\";\nimport \"../style/box.css\";\nimport { BoxInt } from \"../utils/state\";\nimport { BoxInfoInt, convertTitleToBoxInfo } from \"../utils/converter\";\nimport {useSpring, animated} from 'react-spring'\n\ninterface BoxProps {\n  box: BoxInt;\n}\n\nconst Box: React.FC<BoxProps> = ({ box }: BoxProps) => {\n  const {com_ani} = box\n  const {title, color, titleColor} = convertTitleToBoxInfo(box.title)\n\n  const [state, toggle] = useState(true)\n  const { x } = useSpring({ from: { x: 1 }, x: state ? 1 : 0, config: { duration: 200 } })\n\n\n  useEffect(() => {\n    if(com_ani === true){\n      // console.log('object')\n      toggle(!state)\n    }\n  }, [com_ani, state])\n  return (\n    <animated.div className=\"box\" style={Object.assign({backgroundColor: color}, {\n      // opacity: x.interpolate({ range: [0, 1], output: [0.3, 1] }),\n      transform: x\n        .interpolate({\n          // range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n          // output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n          range: [0, 0.5, 1],\n          output: [1, 1.25, 1]\n        })\n        .interpolate(x => `scale(${x})`),\n\n    })} >\n      <p style={{color: titleColor}} className=\"title\">{title}</p>\n    </animated.div>\n  );\n};\nexport default Box;\n","export interface BoxInfoInt {\n  title: string;\n  color: string;\n  titleColor: string;\n}\n\nexport function convertTitleToBoxInfo(title: number): BoxInfoInt {\n  let boxinfo = {\n    title: \"\",\n    color: \"\",\n    titleColor: \"#F9F6F2\",\n  } as BoxInfoInt;\n  boxinfo.title = title === 0 ? \"\" : title.toString();\n  switch (title) {\n    case 0:\n      boxinfo.color = \"#CCC0B4\";\n      break;\n    case 2:\n      boxinfo.color = \"#EEE4DA\";\n      boxinfo.titleColor = \"#776E65\"\n      break;\n    case 4:\n      boxinfo.color = \"#EDE0C8\";\n      boxinfo.titleColor = \"#776E65\"\n      break;\n    case 8:\n      boxinfo.color = \"#F2B179\";\n      break;\n    case 16:\n      boxinfo.color = \"#F59563\";\n      break;\n    case 32:\n      boxinfo.color = \"#F67C5F\";\n      break;\n    case 64:\n      boxinfo.color = \"#F65E3B\";\n      break;\n    case 128:\n      boxinfo.color = \"#EDCF72\";\n      break;\n    case 256:\n      boxinfo.color = \"#EDCC61\";\n      break;\n    case 512:\n      boxinfo.color = \"#EDC850\";\n      break;\n    case 1024:\n      boxinfo.color = \"#EDC53F\";\n      break;\n    case 2048:\n      boxinfo.color = \"#EDC22E\";\n      break;\n    default:\n      boxinfo.color = \"#000\";\n      break;\n  }\n  return boxinfo;\n}\n","import React from \"react\";\nimport Box from \"./Box\";\nimport { StateInt } from \"../utils/state\";\nimport \"../style/boxes.css\";\n\nconst Boxes: React.FC<StateInt> = ({boxes}: StateInt) => {\n  return (\n    <div className=\"game-board\">\n      {boxes.map((row, y) => {\n        return (\n          <div className=\"row\" key={y}>\n            {row.map((box, x) => {\n              return <Box box={box} key={y * 4 + x} />;\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Boxes;\n","import React, { useEffect } from \"react\";\nimport \"../style/game.css\";\nimport Boxes from \"../components/Boxes\";\n\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { StateInt, BoxInt } from \"../utils/state\";\nimport { Dispatcher } from \"../game_redux\";\nimport { useSwipeable, Swipeable } from \"react-swipeable\";\n\nconst Game: React.FC = () => {\n  const boxes: Array<Array<BoxInt>> = useSelector<\n    StateInt,\n    Array<Array<BoxInt>>\n  >(state => state.boxes);\n  const dispatch = useDispatch();\n  const dispatcher = new Dispatcher(dispatch);\n\n  const downHandler = ({ key }: { key: string }) => {\n    let isArrow = false\n    if (key === \"ArrowUp\") {\n      dispatcher.moveUp();\n      isArrow = true\n    }\n    if (key === \"ArrowDown\") {\n      dispatcher.moveDown();\n      isArrow = true\n    }\n    if (key === \"ArrowLeft\") {\n      dispatcher.moveLeft();\n      isArrow = true\n    }\n    if (key === \"ArrowRight\") {\n      dispatcher.moveRight();\n      isArrow = true\n    }\n    if(isArrow === true){\n      dispatcher.resetComAni();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    //window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      //window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []);\n\n  //swipe\n  const handlers = useSwipeable({\n    onSwipedLeft: e => {dispatcher.moveLeft(); dispatcher.resetComAni()},\n    onSwipedUp: e => {dispatcher.moveUp(); dispatcher.resetComAni()},\n    onSwipedDown: e => {dispatcher.moveDown(); dispatcher.resetComAni()},\n    onSwipedRight: e => {dispatcher.moveRight(); dispatcher.resetComAni()},\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true,\n    trackTouch: true,\n  });\n\n  useEffect(() => {\n    dispatcher.initRandom();\n    dispatcher.resetComAni();\n    return () => {\n      console.log('out')\n    }\n  }, []);\n  return (\n    <div className=\"container\" {...handlers} >\n      <Boxes boxes={boxes} />\n    </div>\n  );\n};\n\nexport default Game;\n","import React, {useEffect, useState} from \"react\";\nimport { store } from \"./game_redux\";\nimport { Provider } from \"react-redux\";\nimport Game from \"./components/Game\";\n\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}